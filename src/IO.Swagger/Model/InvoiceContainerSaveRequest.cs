/* 
 * BludeltaWebServiceAPI Selfhosted
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace IO.Swagger.Model
{
  /// <summary>
  ///   Saves the modified invoice container
  /// </summary>
  [DataContract]
  public class InvoiceContainerSaveRequest : IEquatable<InvoiceContainerSaveRequest>, IValidatableObject
  {
    /// <summary>
    ///   Initializes a new instance of the <see cref="InvoiceContainerSaveRequest" /> class.
    /// </summary>
    /// <param name="ContainerId">ContainerId.</param>
    /// <param name="Name">The name of this container.</param>
    /// <param name="Invoices">The Invoices in the container.</param>
    public InvoiceContainerSaveRequest(string ContainerId = default(string), string Name = default(string),
      List<ReducedInvoice> Invoices = default(List<ReducedInvoice>))
    {
      this.ContainerId = ContainerId;
      this.Name = Name;
      this.Invoices = Invoices;
    }

    /// <summary>
    ///   Gets or Sets ContainerId
    /// </summary>
    [DataMember(Name = "ContainerId", EmitDefaultValue = false)]
    public string ContainerId { get; set; }

    /// <summary>
    ///   The name of this container
    /// </summary>
    /// <value>The name of this container</value>
    [DataMember(Name = "Name", EmitDefaultValue = false)]
    public string Name { get; set; }

    /// <summary>
    ///   The Invoices in the container
    /// </summary>
    /// <value>The Invoices in the container</value>
    [DataMember(Name = "Invoices", EmitDefaultValue = false)]
    public List<ReducedInvoice> Invoices { get; set; }

    /// <summary>
    ///   Returns true if InvoiceContainerSaveRequest instances are equal
    /// </summary>
    /// <param name="other">Instance of InvoiceContainerSaveRequest to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(InvoiceContainerSaveRequest other)
    {
      // credit: http://stackoverflow.com/a/10454552/677735
      if (other == null)
        return false;

      return
        (
          ContainerId == other.ContainerId ||
          ContainerId != null &&
          ContainerId.Equals(other.ContainerId)
        ) &&
        (
          Name == other.Name ||
          Name != null &&
          Name.Equals(other.Name)
        ) &&
        (
          Invoices == other.Invoices ||
          Invoices != null &&
          Invoices.SequenceEqual(other.Invoices)
        );
    }

    /// <summary>
    ///   To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
      yield break;
    }

    /// <summary>
    ///   Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      var sb = new StringBuilder();
      sb.Append("class InvoiceContainerSaveRequest {\n");
      sb.Append("  ContainerId: ").Append(ContainerId).Append("\n");
      sb.Append("  Name: ").Append(Name).Append("\n");
      sb.Append("  Invoices: ").Append(Invoices).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    ///   Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson()
    {
      return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    ///   Returns true if objects are equal
    /// </summary>
    /// <param name="obj">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object obj)
    {
      // credit: http://stackoverflow.com/a/10454552/677735
      return Equals(obj as InvoiceContainerSaveRequest);
    }

    /// <summary>
    ///   Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
      // credit: http://stackoverflow.com/a/263416/677735
      unchecked // Overflow is fine, just wrap
      {
        var hash = 41;
        // Suitable nullity checks etc, of course :)
        if (ContainerId != null)
          hash = hash * 59 + ContainerId.GetHashCode();
        if (Name != null)
          hash = hash * 59 + Name.GetHashCode();
        if (Invoices != null)
          hash = hash * 59 + Invoices.GetHashCode();
        return hash;
      }
    }
  }
}