/* 
 * BludeltaWebServiceAPI Selfhosted
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace IO.Swagger.Model
{
  /// <summary>
  ///   OcrResultResponse
  /// </summary>
  [DataContract]
  public class OcrResultResponse : IEquatable<OcrResultResponse>, IValidatableObject
  {
    /// <summary>
    ///   Initializes a new instance of the <see cref="OcrResultResponse" /> class.
    /// </summary>
    /// <param name="State">Request state. 0 on success else 1.</param>
    /// <param name="Message">User-friendly message in case of an error.</param>
    /// <param name="OcrResult">OcrResult. It contains either the requested page or all pages.</param>
    public OcrResultResponse(int? State = default(int?), string Message = default(string),
      object OcrResult = default(object))
    {
      this.State = State;
      this.Message = Message;
      this.OcrResult = OcrResult;
    }

    /// <summary>
    ///   Request state. 0 on success else 1
    /// </summary>
    /// <value>Request state. 0 on success else 1</value>
    [DataMember(Name = "State", EmitDefaultValue = false)]
    public int? State { get; set; }

    /// <summary>
    ///   User-friendly message in case of an error
    /// </summary>
    /// <value>User-friendly message in case of an error</value>
    [DataMember(Name = "Message", EmitDefaultValue = false)]
    public string Message { get; set; }

    /// <summary>
    ///   OcrResult. It contains either the requested page or all pages
    /// </summary>
    /// <value>OcrResult. It contains either the requested page or all pages</value>
    [DataMember(Name = "OcrResult", EmitDefaultValue = false)]
    public object OcrResult { get; set; }

    /// <summary>
    ///   Returns true if OcrResultResponse instances are equal
    /// </summary>
    /// <param name="other">Instance of OcrResultResponse to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(OcrResultResponse other)
    {
      // credit: http://stackoverflow.com/a/10454552/677735
      if (other == null)
        return false;

      return
        (
          State == other.State ||
          State != null &&
          State.Equals(other.State)
        ) &&
        (
          Message == other.Message ||
          Message != null &&
          Message.Equals(other.Message)
        ) &&
        (
          OcrResult == other.OcrResult ||
          OcrResult != null &&
          OcrResult.Equals(other.OcrResult)
        );
    }

    /// <summary>
    ///   To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
      yield break;
    }

    /// <summary>
    ///   Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      var sb = new StringBuilder();
      sb.Append("class OcrResultResponse {\n");
      sb.Append("  State: ").Append(State).Append("\n");
      sb.Append("  Message: ").Append(Message).Append("\n");
      sb.Append("  OcrResult: ").Append(OcrResult).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    ///   Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson()
    {
      return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    ///   Returns true if objects are equal
    /// </summary>
    /// <param name="obj">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object obj)
    {
      // credit: http://stackoverflow.com/a/10454552/677735
      return Equals(obj as OcrResultResponse);
    }

    /// <summary>
    ///   Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
      // credit: http://stackoverflow.com/a/263416/677735
      unchecked // Overflow is fine, just wrap
      {
        var hash = 41;
        // Suitable nullity checks etc, of course :)
        if (State != null)
          hash = hash * 59 + State.GetHashCode();
        if (Message != null)
          hash = hash * 59 + Message.GetHashCode();
        if (OcrResult != null)
          hash = hash * 59 + OcrResult.GetHashCode();
        return hash;
      }
    }
  }
}